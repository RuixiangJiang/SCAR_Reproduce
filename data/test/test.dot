strict digraph "" {
	node [label="\N"];
	"18:AS"	[ast="<pyverilog.vparser.ast.Assign object at 0x737f1d170130>",
		def_var="['c']",
		fillcolor=deepskyblue,
		label="18:AS
c = a & b ^ (a | b);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['a', 'b', 'a', 'b']"];
	"40:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x737f1d0d2970>",
		clk_sens=False,
		fillcolor=gold,
		label="40:AL",
		sens="['clk', 'rst']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['c', 'rst', 'instr_i', 'next_state']"];
	"18:AS" -> "40:AL";
	"20:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x737f1d170d00>",
		clk_sens=False,
		fillcolor=gold,
		label="20:AL",
		sens="['b', 'instr_i', 'a']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['b', 'instr_i', 'a']"];
	"20:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x737f1d170b50>",
		fillcolor=turquoise,
		label="20:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"20:AL" -> "20:BL"	[cond="[]",
		lineno=None];
	"22:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x737f1d170c10>",
		fillcolor=springgreen,
		label="22:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"20:BL" -> "22:IF"	[cond="[]",
		lineno=None];
	"23:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0b1250>",
		fillcolor=cadetblue,
		label="23:BS
instr_o = { instr_i[3:0], a };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0b1250>]",
		style=filled,
		typ=BlockingSubstitution];
	"22:IF" -> "23:BS"	[cond="['instr_i']",
		label="instr_i[0]",
		lineno=22];
	"25:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0b1280>",
		fillcolor=cadetblue,
		label="25:BS
instr_o = b ^ instr_i[7:4];",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0b1280>]",
		style=filled,
		typ=BlockingSubstitution];
	"22:IF" -> "25:BS"	[cond="['instr_i']",
		label="!(instr_i[0])",
		lineno=22];
	"Leaf_20:AL"	[def_var="['instr_o']",
		label="Leaf_20:AL"];
	"23:BS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"25:BS" -> "Leaf_20:AL"	[cond="[]",
		lineno=None];
	"29:AL"	[ast="<pyverilog.vparser.ast.Always object at 0x737f1d0b1820>",
		clk_sens=False,
		fillcolor=gold,
		label="29:AL",
		sens="['instr_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['state', 'instr_i']"];
	"29:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x737f1d170af0>",
		fillcolor=turquoise,
		label="29:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"29:AL" -> "29:BL"	[cond="[]",
		lineno=None];
	"30:CS"	[ast="<pyverilog.vparser.ast.CaseStatement object at 0x737f1d0b1f40>",
		fillcolor=linen,
		label="30:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"29:BL" -> "30:CS"	[cond="[]",
		lineno=None];
	"31:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x737f1d0b1d00>",
		fillcolor=lightcyan,
		label="31:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:CS" -> "31:CA"	[cond="['state']",
		label=state,
		lineno=30];
	"32:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x737f1d0b1a30>",
		fillcolor=lightcyan,
		label="32:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:CS" -> "32:CA"	[cond="['state']",
		label=state,
		lineno=30];
	"33:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x737f1d0b1f70>",
		fillcolor=lightcyan,
		label="33:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:CS" -> "33:CA"	[cond="['state']",
		label=state,
		lineno=30];
	"34:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x737f1d0d2580>",
		fillcolor=lightcyan,
		label="34:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:CS" -> "34:CA"	[cond="['state']",
		label=state,
		lineno=30];
	"35:CA"	[ast="<pyverilog.vparser.ast.Case object at 0x737f1d0d2790>",
		fillcolor=lightcyan,
		label="35:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"30:CS" -> "35:CA"	[cond="['state']",
		label=state,
		lineno=30];
	"31:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0b1ca0>",
		fillcolor=cadetblue,
		label="31:BS
next_state = (instr_i[1])? 2'b01 : 2'b00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0b1ca0>]",
		style=filled,
		typ=BlockingSubstitution];
	"31:CA" -> "31:BS"	[cond="[]",
		lineno=None];
	"32:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0b1fd0>",
		fillcolor=cadetblue,
		label="32:BS
next_state = 2'b10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0b1fd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"32:CA" -> "32:BS"	[cond="[]",
		lineno=None];
	"33:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0d2280>",
		fillcolor=cadetblue,
		label="33:BS
next_state = 2'b11;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0d2280>]",
		style=filled,
		typ=BlockingSubstitution];
	"33:CA" -> "33:BS"	[cond="[]",
		lineno=None];
	"34:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0d2520>",
		fillcolor=cadetblue,
		label="34:BS
next_state = 2'b00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0d2520>]",
		style=filled,
		typ=BlockingSubstitution];
	"34:CA" -> "34:BS"	[cond="[]",
		lineno=None];
	"35:BS"	[ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0d2730>",
		fillcolor=cadetblue,
		label="35:BS
next_state = 2'b00;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x737f1d0d2730>]",
		style=filled,
		typ=BlockingSubstitution];
	"35:CA" -> "35:BS"	[cond="[]",
		lineno=None];
	"Leaf_29:AL"	[def_var="['next_state']",
		label="Leaf_29:AL"];
	"35:BS" -> "Leaf_29:AL"	[cond="[]",
		lineno=None];
	"34:BS" -> "Leaf_29:AL"	[cond="[]",
		lineno=None];
	"33:BS" -> "Leaf_29:AL"	[cond="[]",
		lineno=None];
	"32:BS" -> "Leaf_29:AL"	[cond="[]",
		lineno=None];
	"31:BS" -> "Leaf_29:AL"	[cond="[]",
		lineno=None];
	"Leaf_29:AL" -> "40:AL";
	"40:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x737f1d0d2850>",
		fillcolor=turquoise,
		label="40:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"40:AL" -> "40:BL"	[cond="[]",
		lineno=None];
	"41:IF"	[ast="<pyverilog.vparser.ast.IfStatement object at 0x737f1d0b13d0>",
		fillcolor=springgreen,
		label="41:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"40:BL" -> "41:IF"	[cond="[]",
		lineno=None];
	"41:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x737f1d0d2a90>",
		fillcolor=turquoise,
		label="41:BL
state <= 2'b00;
a <= 4'b0000;
b <= 4'b0000;
flag <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x737f1d0d2c40>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x737f1d0d2e50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x737f1d0ca040>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x737f1d0ca1f0>]",
		style=filled,
		typ=Block];
	"41:IF" -> "41:BL"	[cond="['rst']",
		label=rst,
		lineno=41];
	"46:BL"	[ast="<pyverilog.vparser.ast.Block object at 0x737f1d0d29a0>",
		fillcolor=turquoise,
		label="46:BL
state <= next_state;
a <= instr_i[3:0];
b <= instr_i[7:4];
flag <= c[0] ^ instr_i[0];",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x737f1d0ca460>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x737f1d0ca3d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x737f1d0ca5b0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x737f1d0cab80>]",
		style=filled,
		typ=Block];
	"41:IF" -> "46:BL"	[cond="['rst']",
		label="!(rst)",
		lineno=41];
	"Leaf_40:AL"	[def_var="['state', 'b', 'flag', 'a']",
		label="Leaf_40:AL"];
	"41:BL" -> "Leaf_40:AL"	[cond="[]",
		lineno=None];
	"46:BL" -> "Leaf_40:AL"	[cond="[]",
		lineno=None];
	"Leaf_40:AL" -> "18:AS";
	"Leaf_40:AL" -> "20:AL";
	"Leaf_40:AL" -> "29:AL";
}
