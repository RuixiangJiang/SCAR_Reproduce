"Node","Matches"
"SEQ_BLK.343:IF","[]"
"SEQ_BLK.MODEXP_SEQ.455:BL","[]"
"116:AS
v = r_data_s[0];","[('RSA_tb.RSA.v', 0, 0), ('RSA_tb.RSA.r_data_s[31:0]', 0, 0)]"
"SEQ_BLK.MONTMULT_SEQ.591:AS
Hlt = pc[27];","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.Hlt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 27)]"
"MULT_BLK.REG_X.1054:AL","[]"
"SEQ_BLK.MODEXP_SEQ.461:NS
pc <= { pc[10:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0), ('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 10, 0)]"
"MEM1.155:BL
mem[A] <= D;","[('RSA_tb.RSA.MEM1.A[6:0]', 6, 0), ('RSA_tb.RSA.MEM1.D[31:0]', 31, 0)]"
"SEQ_BLK.357:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.685:AS
Contmp = decoder(pc, a);","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.Contmp[32:0]', 32, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.a', 0, 0)]"
"MULT_BLK.REG_X.1055:IF","[]"
"SEQ_BLK.MODEXP_SEQ.464:IF","[]"
"115:AS
w_data = mux3_1_32(d_out, r_data_m, d_in, DSel);","[('RSA_tb.RSA.w_data[31:0]', 31, 0), ('RSA_tb.RSA.d_out[31:0]', 31, 0), ('RSA_tb.RSA.r_data_m[31:0]', 31, 0), ('RSA_tb.RSA.d_in[31:0]', 31, 0), ('RSA_tb.RSA.DSel[1:0]', 1, 0)]"
"SEQ_BLK.329:IF","[]"
"SEQ_BLK.225:BL
state <= MOD_GET;
InOutMem <= 2'b10;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0), ('RSA_tb.RSA.SEQ_BLK.InOutMem[1:0]', 1, 0)]"
"SEQ_BLK.MONTMULT_SEQ.503:BL","[]"
"SEQ_BLK.MONTREDC_SEQ.687:AS
Hlt = pc[10];","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.Hlt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 10)]"
"SEQ_BLK.290:BL","[]"
"SEQ_BLK.MONTMULT_SEQ.545:NS
pc <= { pc[26:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0), ('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 26, 0)]"
"SEQ_BLK.MONTMULT_SEQ.541:NS
pc <= { pc[26:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0), ('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 26, 0)]"
"SEQ_BLK.LOOP_CON.892:IF","[]"
"SEQ_BLK.222:CS","[]"
"SEQ_BLK.MONTREDC_SEQ.621:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.630:IF","[]"
"SEQ_BLK.265:IF","[]"
"SEQ_BLK.MODEXP_SEQ.456:IF","[]"
"SEQ_BLK.280:IF","[]"
"SEQ_BLK.231:BL
state <= IDLE;
Kvldrg <= 1'b1;
Kvldrg_tmp <= 1'b1;
count <= 5'b00000;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0), ('RSA_tb.RSA.SEQ_BLK.Kvldrg', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Kvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.count[4:0]', 4, 0)]"
"SEQ_BLK.INVN_SEQ.730:AS
Hlt = pc[6];","[('RSA_tb.RSA.SEQ_BLK.INVN_SEQ.Hlt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.INVN_SEQ.pc[6:0]', 6, 6)]"
"SEQ_BLK.ONE_SEQ.787:IF","[]"
"SEQ_BLK.ONE_SEQ.Leaf_786:AL","[]"
"SEQ_BLK.START_MM.432:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_MM.rgt', 0, 0)]"
"SEQ_BLK.START_O.Leaf_428:AL","[]"
"SEQ_BLK.MONTMULT_SEQ.503:AL","[]"
"SEQ_BLK.Cp_SEQ.752:NS
pc <= { pc[2:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.Cp_SEQ.pc[3:0]', 3, 0), ('RSA_tb.RSA.SEQ_BLK.Cp_SEQ.pc[3:0]', 2, 0)]"
"SEQ_BLK.MONTMULT_SEQ.543:NS
pc <= 28'b0000010000000000000000000000;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"67:AL","[]"
"SEQ_BLK.START_C.434:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_C.rgt', 0, 0)]"
"SEQ_BLK.MONTREDC_SEQ.652:BL","[]"
"SEQ_BLK.LOOP_CON.889:NS
i_me <= 10'b0000000000;","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.i_me[9:0]', 9, 0)]"
"SEQ_BLK.INVN_SEQ.709:NS
pc <= { pc[5:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.INVN_SEQ.pc[6:0]', 6, 0), ('RSA_tb.RSA.SEQ_BLK.INVN_SEQ.pc[6:0]', 5, 0)]"
"SEQ_BLK.ONE_SEQ.788:NS
pc <= 5'b00000;","[('RSA_tb.RSA.SEQ_BLK.ONE_SEQ.pc[4:0]', 4, 0)]"
"SEQ_BLK.MODEXP_SEQ.464:NS
pc <= { pc[10:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0), ('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 10, 0)]"
"MEM0.155:IF","[]"
"SEQ_BLK.START_MM.429:IF","[]"
"MULT_BLK.REG_Z.Leaf_1054:AL","[]"
"MULT_BLK.REG_Y.1060:NS
q <= d;","[('RSA_tb.RSA.MULT_BLK.REG_Y.q[31:0]', 31, 0), ('RSA_tb.RSA.MULT_BLK.REG_Y.d[31:0]', 31, 0)]"
"SEQ_BLK.MONTREDC_SEQ.627:NS
pc <= 11'b00000000000;","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0)]"
"MULT_BLK.REG_Z.1059:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.625:AL","[]"
"SEQ_BLK.MONTREDC_SEQ.637:IF","[]"
"SEQ_BLK.306:BL
state <= DATA_GET;
InOutMem <= 2'b10;
Dvldrg <= 1'b0;
Kvldrg_tmp <= 1'b0;
Mvldrg_tmp <= 1'b0;
Rst <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0), ('RSA_tb.RSA.SEQ_BLK.InOutMem[1:0]', 1, 0), ('RSA_tb.RSA.SEQ_BLK.Dvldrg', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Kvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Mvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Rst', 0, 0)]"
"SEQ_BLK.Cp_SEQ.750:NS
pc <= 4'b0001;","[('RSA_tb.RSA.SEQ_BLK.Cp_SEQ.pc[3:0]', 3, 0)]"
"SEQ_BLK.370:NS
msb <= exp;","[('RSA_tb.RSA.SEQ_BLK.msb', 0, 0), ('RSA_tb.RSA.SEQ_BLK.exp', 0, 0)]"
"SEQ_BLK.342:AL","[]"
"SEQ_BLK.Leaf_342:AL","[]"
"SEQ_BLK.MODEXP_SEQ.474:IF","[]"
"SEQ_BLK.Cp_SEQ.755:NS
pc <= { pc[2:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.Cp_SEQ.pc[3:0]', 3, 0), ('RSA_tb.RSA.SEQ_BLK.Cp_SEQ.pc[3:0]', 2, 0)]"
"SEQ_BLK.MONTMULT_SEQ.512:NS
pc <= { pc[26:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0), ('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 26, 0)]"
"SEQ_BLK.LOOP_CON.860:IF","[]"
"SEQ_BLK.356:NS
exp <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.exp', 0, 0)]"
"MULT_BLK.REG_X.1059:IF","[]"
"MEM0.155:BL
mem[A] <= D;","[('RSA_tb.RSA.MEM0.A[6:0]', 6, 0), ('RSA_tb.RSA.MEM0.D[31:0]', 31, 0)]"
"SEQ_BLK.MONTREDC_SEQ.631:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.619:IF","[]"
"SEQ_BLK.389:AS
Con = mux5_1(Con_MM, Con_MR, Con_IN, Con_C, Con_O, { Pc[9], Pc[3], Pc[1], Pc[2], Pc_MM });","[('RSA_tb.RSA.SEQ_BLK.Con[30:0]', 30, 0), ('RSA_tb.RSA.SEQ_BLK.Con_MM[30:0]', 30, 0), ('RSA_tb.RSA.SEQ_BLK.Con_MR[30:0]', 30, 0), ('RSA_tb.RSA.SEQ_BLK.Con_IN[30:0]', 30, 0), ('RSA_tb.RSA.SEQ_BLK.Con_C[30:0]', 30, 0), ('RSA_tb.RSA.SEQ_BLK.Con_O[30:0]', 30, 0), ('RSA_tb.RSA.SEQ_BLK.Pc[11:0]', 9, 9), ('RSA_tb.RSA.SEQ_BLK.Pc[11:0]', 3, 3), ('RSA_tb.RSA.SEQ_BLK.Pc[11:0]', 1, 1), ('RSA_tb.RSA.SEQ_BLK.Pc[11:0]', 2, 2), ('RSA_tb.RSA.SEQ_BLK.Pc_MM', 0, 0)]"
"SEQ_BLK.Cp_SEQ.770:AS
Hlt = pc[3];","[('RSA_tb.RSA.SEQ_BLK.Cp_SEQ.Hlt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Cp_SEQ.pc[3:0]', 3, 3)]"
"SEQ_BLK.LOOP_CON.869:BL","[]"
"SEQ_BLK.MONTMULT_SEQ.517:NS
pc <= 28'b0000000000000001000000000000;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"MULT_BLK.REG_C.1055:IF","[]"
"MEM1.158:IF","[]"
"SEQ_BLK.LOOP_CON.896:AS
jp1 = q[4:0];","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.jp1[4:0]', 4, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.q[10:0]', 4, 0)]"
"SEQ_BLK.MONTMULT_SEQ.523:IF","[]"
"SEQ_BLK.Cp_SEQ.746:AL","[]"
"SEQ_BLK.LOOP_CON.891:NS
i_me <= 10'b0000000000;","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.i_me[9:0]', 9, 0)]"
"73:NS
Krg <= { Krg[1022:0], Krg[1023] };","[('RSA_tb.RSA.Krg[1023:0]', 1023, 0), ('RSA_tb.RSA.Krg[1023:0]', 1022, 0), ('RSA_tb.RSA.Krg[1023:0]', 1023, 1023)]"
"MULT_BLK.REG_C.1054:BL","[]"
"MEM1.159:NS
Q <= mem[A];","[('RSA_tb.RSA.MEM1.Q[31:0]', 31, 0), ('RSA_tb.RSA.MEM1.A[6:0]', 6, 0)]"
"SEQ_BLK.MONTMULT_SEQ.524:NS
pc <= { pc[26:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0), ('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 26, 0)]"
"SEQ_BLK.LOOP_CON.880:IF","[]"
"SEQ_BLK.START_MM.Leaf_428:AL","[]"
"SEQ_BLK.291:BL
state <= KEY_GET;
Dvldrg <= 1'b0;
Kvldrg_tmp <= 1'b0;
Mvldrg_tmp <= 1'b0;
Rst <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0), ('RSA_tb.RSA.SEQ_BLK.Dvldrg', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Kvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Mvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Rst', 0, 0)]"
"MULT_BLK.REG_C.1058:NS
q <= 32'h00000000;","[('RSA_tb.RSA.MULT_BLK.REG_C.q[31:0]', 31, 0)]"
"MEM1.Leaf_154:AL","[]"
"SEQ_BLK.393:AS
Fin = Hlt_MM | Hlt_MR | Hlt_IN | Hlt_C | Hlt_O | Start;","[('RSA_tb.RSA.SEQ_BLK.Fin', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Hlt_MM', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Hlt_MR', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Hlt_IN', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Hlt_C', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Hlt_O', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Start', 0, 0)]"
"SEQ_BLK.MONTMULT_SEQ.501:AS
zero = ~(|(i ^ 10'b0000000000));","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.zero', 0, 0), ('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.i[9:0]', 9, 0)]"
"SEQ_BLK.START_O.432:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_O.rgt', 0, 0)]"
"SEQ_BLK.START_IN.Leaf_428:AL","[]"
"SEQ_BLK.LOOP_CON.883:NS
jj <= j;","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.jj[4:0]', 4, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.j[4:0]', 4, 0)]"
"SEQ_BLK.225:IF","[]"
"SEQ_BLK.MONTMULT_SEQ.534:NS
pc <= { pc[26:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0), ('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 26, 0)]"
"SEQ_BLK.LOOP_CON.852:AS
q = add_in + 10'b0000000001;","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.q[10:0]', 10, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.add_in[9:0]', 9, 0)]"
"MEM1.154:AL","[]"
"SEQ_BLK.INVN_SEQ.706:IF","[]"
"SEQ_BLK.280:BL
state <= IDLE;
InOutMem <= 2'b00;
count <= 5'b00000;
Rst <= 1'b1;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0), ('RSA_tb.RSA.SEQ_BLK.InOutMem[1:0]', 1, 0), ('RSA_tb.RSA.SEQ_BLK.count[4:0]', 4, 0), ('RSA_tb.RSA.SEQ_BLK.Rst', 0, 0)]"
"SEQ_BLK.MONTREDC_SEQ.652:IF","[]"
"SEQ_BLK.MONTMULT_SEQ.521:NS
pc <= 28'b0000000000000000100000000000;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"SEQ_BLK.MONTMULT_SEQ.527:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.648:NS
pc <= 11'b10000000000;","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0)]"
"78:AS
Dout = r_data_m;","[('RSA_tb.RSA.Dout[31:0]', 31, 0), ('RSA_tb.RSA.r_data_m[31:0]', 31, 0)]"
"SEQ_BLK.MONTREDC_SEQ.645:IF","[]"
"MULT_BLK.REG_C.1060:NS
q <= d;","[('RSA_tb.RSA.MULT_BLK.REG_C.q[31:0]', 31, 0), ('RSA_tb.RSA.MULT_BLK.REG_C.d[31:0]', 31, 0)]"
"71:NS
Krg <= { Kin, Krg[1023:32] };","[('RSA_tb.RSA.Krg[1023:0]', 1023, 0), ('RSA_tb.RSA.Kin[31:0]', 31, 0), ('RSA_tb.RSA.Krg[1023:0]', 1023, 32)]"
"SEQ_BLK.START_C.432:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_C.rgt', 0, 0)]"
"MEM1.151:AS
MemW = (WEN == 0) & (CEN == 0);","[('RSA_tb.RSA.MEM1.MemW', 0, 0), ('RSA_tb.RSA.MEM1.WEN', 0, 0), ('RSA_tb.RSA.MEM1.CEN', 0, 0)]"
"SEQ_BLK.LOOP_CON.869:AL","[]"
"SEQ_BLK.INVN_SEQ.712:NS
pc <= { pc[5:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.INVN_SEQ.pc[6:0]', 6, 0), ('RSA_tb.RSA.SEQ_BLK.INVN_SEQ.pc[6:0]', 5, 0)]"
"SEQ_BLK.MONTMULT_SEQ.506:IF","[]"
"MULT_BLK.REG_X.1056:NS
q <= 32'h00000000;","[('RSA_tb.RSA.MULT_BLK.REG_X.q[31:0]', 31, 0)]"
"SEQ_BLK.START_IN.436:NS
rgt <= rgt | Pc;","[('RSA_tb.RSA.SEQ_BLK.START_IN.rgt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_IN.Pc', 0, 0)]"
"SEQ_BLK.MODEXP_SEQ.475:IF","[]"
"SEQ_BLK.MODEXP_SEQ.469:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.637:BL","[]"
"SEQ_BLK.START_C.428:BL","[]"
"MEM0.158:IF","[]"
"SEQ_BLK.Cp_SEQ.752:IF","[]"
"SEQ_BLK.MODEXP_SEQ.478:IF","[]"
"SEQ_BLK.MODEXP_SEQ.455:AL","[]"
"SEQ_BLK.264:BL","[]"
"SEQ_BLK.INVN_SEQ.729:AS
Con = decoder(pc);","[('RSA_tb.RSA.SEQ_BLK.INVN_SEQ.Con[30:0]', 30, 0), ('RSA_tb.RSA.SEQ_BLK.INVN_SEQ.pc[6:0]', 6, 0)]"
"SEQ_BLK.MONTREDC_SEQ.617:IF","[]"
"SEQ_BLK.MODEXP_SEQ.459:NS
pc <= 12'b000000000001;","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0)]"
"SEQ_BLK.Cp_SEQ.769:AS
Con = decoder(pc);","[('RSA_tb.RSA.SEQ_BLK.Cp_SEQ.Con[30:0]', 30, 0), ('RSA_tb.RSA.SEQ_BLK.Cp_SEQ.pc[3:0]', 3, 0)]"
"67:BL","[]"
"SEQ_BLK.MONTREDC_SEQ.650:NS
pc <= 11'b00000000100;","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0)]"
"SEQ_BLK.LOOP_CON.Leaf_887:AL","[]"
"SEQ_BLK.Leaf_354:AL","[]"
"SEQ_BLK.START_O.434:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_O.rgt', 0, 0)]"
"SEQ_BLK.MONTREDC_SEQ.628:IF","[]"
"SEQ_BLK.START_O.430:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_O.rgt', 0, 0)]"
"SEQ_BLK.ONE_SEQ.786:AL","[]"
"SEQ_BLK.ONE_SEQ.792:NS
pc <= { pc[3:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.ONE_SEQ.pc[4:0]', 4, 0), ('RSA_tb.RSA.SEQ_BLK.ONE_SEQ.pc[4:0]', 3, 0)]"
"SEQ_BLK.MONTMULT_SEQ.504:IF","[]"
"SEQ_BLK.START_MM.428:BL","[]"
"SEQ_BLK.287:NS
count <= count + 1;","[('RSA_tb.RSA.SEQ_BLK.count[4:0]', 4, 0)]"
"SEQ_BLK.ONE_SEQ.789:IF","[]"
"SEQ_BLK.START_C.439:AS
Start = ~rgt & Pc;","[('RSA_tb.RSA.SEQ_BLK.START_C.Start', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_C.rgt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_C.Pc', 0, 0)]"
"SEQ_BLK.328:AL","[]"
"SEQ_BLK.MONTREDC_SEQ.656:NS
pc <= 11'b00010000000;","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0)]"
"SEQ_BLK.MONTMULT_SEQ.590:AS
Con = decoder(pc, Sel, zero);","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.Con[30:0]', 30, 0), ('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0), ('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.Sel', 0, 0), ('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.zero', 0, 0)]"
"SEQ_BLK.LOOP_CON.881:NS
jj <= 5'b00000;","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.jj[4:0]', 4, 0)]"
"SEQ_BLK.LOOP_CON.859:AL","[]"
"SEQ_BLK.START_C.Leaf_428:AL","[]"
"SEQ_BLK.START_MR.430:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_MR.rgt', 0, 0)]"
"SEQ_BLK.MONTREDC_SEQ.629:NS
pc <= 11'b00000000001;","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0)]"
"SEQ_BLK.ONE_SEQ.790:NS
pc <= 5'b00001;","[('RSA_tb.RSA.SEQ_BLK.ONE_SEQ.pc[4:0]', 4, 0)]"
"SEQ_BLK.MODEXP_SEQ.473:NS
pc <= pc;","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0)]"
"SEQ_BLK.MONTREDC_SEQ.643:IF","[]"
"SEQ_BLK.Leaf_328:AL","[]"
"SEQ_BLK.MODEXP_SEQ.471:NS
pc <= { pc[10:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0), ('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 10, 0)]"
"SEQ_BLK.MONTMULT_SEQ.508:IF","[]"
"SEQ_BLK.START_C.433:IF","[]"
"SEQ_BLK.MODEXP_SEQ.467:NS
pc <= { pc[10:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0), ('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 10, 0)]"
"SEQ_BLK.264:CA","[]"
"SEQ_BLK.MODEXP_SEQ.461:IF","[]"
"SEQ_BLK.MONTMULT_SEQ.528:IF","[]"
"SEQ_BLK.208:AL","[]"
"SEQ_BLK.254:IF","[]"
"SEQ_BLK.339:AS
Dvld = Dvldrg;","[('RSA_tb.RSA.SEQ_BLK.Dvld', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Dvldrg', 0, 0)]"
"SEQ_BLK.359:IF","[]"
"SEQ_BLK.MONTMULT_SEQ.511:IF","[]"
"SEQ_BLK.MONTMULT_SEQ.526:NS
pc <= 28'b0000000000000000010000000000;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"125:AS
MemCon1 = mux3_1_9(MemCon_s, MemCon_m, MemCon_i, MemCon_o, { MemSel, InOutMem });","[('RSA_tb.RSA.MemCon1[8:0]', 8, 0), ('RSA_tb.RSA.MemCon_s[8:0]', 8, 0), ('RSA_tb.RSA.MemCon_m[8:0]', 8, 0), ('RSA_tb.RSA.MemCon_i[8:0]', 8, 0), ('RSA_tb.RSA.MemCon_o[8:0]', 8, 0), ('RSA_tb.RSA.MemSel', 0, 0), ('RSA_tb.RSA.InOutMem[1:0]', 1, 0)]"
"MULT_BLK.REG_Y.1058:NS
q <= 32'h00000000;","[('RSA_tb.RSA.MULT_BLK.REG_Y.q[31:0]', 31, 0)]"
"SEQ_BLK.LOOP_CON.864:IF","[]"
"SEQ_BLK.START_MM.430:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_MM.rgt', 0, 0)]"
"MEM0.Leaf_154:AL","[]"
"SEQ_BLK.MONTREDC_SEQ.626:IF","[]"
"SEQ_BLK.368:NS
msb <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.msb', 0, 0)]"
"SEQ_BLK.ONE_SEQ.810:AS
Con = decoder(pc);","[('RSA_tb.RSA.SEQ_BLK.ONE_SEQ.Con[30:0]', 30, 0), ('RSA_tb.RSA.SEQ_BLK.ONE_SEQ.pc[4:0]', 4, 0)]"
"SEQ_BLK.ONE_SEQ.795:NS
pc <= { pc[3:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.ONE_SEQ.pc[4:0]', 4, 0), ('RSA_tb.RSA.SEQ_BLK.ONE_SEQ.pc[4:0]', 3, 0)]"
"SEQ_BLK.MONTMULT_SEQ.519:NS
pc <= 28'b0000000000000000000001000000;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"SEQ_BLK.242:IF","[]"
"SEQ_BLK.MODEXP_SEQ.467:IF","[]"
"SEQ_BLK.230:BL","[]"
"SEQ_BLK.MODEXP_SEQ.458:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.638:IF","[]"
"SEQ_BLK.START_O.436:NS
rgt <= rgt | Pc;","[('RSA_tb.RSA.SEQ_BLK.START_O.rgt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_O.Pc', 0, 0)]"
"MEM0.152:AS
MemR = (WEN == 1) & (CEN == 0);","[('RSA_tb.RSA.MEM0.MemR', 0, 0), ('RSA_tb.RSA.MEM0.WEN', 0, 0), ('RSA_tb.RSA.MEM0.CEN', 0, 0)]"
"SEQ_BLK.MONTMULT_SEQ.507:NS
pc <= 28'b0000000000000000000000000001;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"SEQ_BLK.322:CA","[]"
"MULT_BLK.REG_Z.1054:BL","[]"
"SEQ_BLK.MONTREDC_SEQ.Leaf_625:AL","[]"
"SEQ_BLK.250:NS
count <= count + 1;","[('RSA_tb.RSA.SEQ_BLK.count[4:0]', 4, 0)]"
"SEQ_BLK.START_C.429:IF","[]"
"MULT_BLK.REG_C.1054:AL","[]"
"SEQ_BLK.366:NS
msb <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.msb', 0, 0)]"
"MULT_BLK.REG_Y.Leaf_1054:AL","[]"
"SEQ_BLK.MODEXP_SEQ.470:IF","[]"
"72:IF","[]"
"SEQ_BLK.MODEXP_SEQ.477:IF","[]"
"SEQ_BLK.MODEXP_SEQ.Leaf_455:AL","[]"
"MULT_BLK.REG_Z.1056:NS
q <= 32'h00000000;","[('RSA_tb.RSA.MULT_BLK.REG_Z.q[31:0]', 31, 0)]"
"SEQ_BLK.Leaf_364:AL","[]"
"70:IF","[]"
"SEQ_BLK.335:AS
BSY = BSYrg;","[('RSA_tb.RSA.SEQ_BLK.BSY', 0, 0), ('RSA_tb.RSA.SEQ_BLK.BSYrg', 0, 0)]"
"SEQ_BLK.MONTMULT_SEQ.514:NS
pc <= 28'b0000000000000000000100000000;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"SEQ_BLK.231:IF","[]"
"SEQ_BLK.MONTMULT_SEQ.522:IF","[]"
"SEQ_BLK.INVN_SEQ.709:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.616:AL","[]"
"SEQ_BLK.START_IN.428:AL","[]"
"SEQ_BLK.INVN_SEQ.710:NS
pc <= 7'b0000100;","[('RSA_tb.RSA.SEQ_BLK.INVN_SEQ.pc[6:0]', 6, 0)]"
"SEQ_BLK.348:NS
s <= ~(sign ^ v ^ s);","[('RSA_tb.RSA.SEQ_BLK.s', 0, 0), ('RSA_tb.RSA.SEQ_BLK.sign', 0, 0), ('RSA_tb.RSA.SEQ_BLK.v', 0, 0)]"
"SEQ_BLK.START_MM.434:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_MM.rgt', 0, 0)]"
"SEQ_BLK.START_IN.429:IF","[]"
"SEQ_BLK.LOOP_CON.850:AS
add_in = mux3_1(j, i, i_me, { Pc[1], Con[0] });","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.add_in[9:0]', 9, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.j[4:0]', 4, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.i[9:0]', 9, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.i_me[9:0]', 9, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.Pc[1:0]', 1, 1), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.Con[5:0]', 0, 0)]"
"SEQ_BLK.LOOP_CON.874:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.635:IF","[]"
"SEQ_BLK.ONE_SEQ.793:NS
pc <= pc;","[('RSA_tb.RSA.SEQ_BLK.ONE_SEQ.pc[4:0]', 4, 0)]"
"MULT_BLK.REG_C.1059:IF","[]"
"SEQ_BLK.342:BL","[]"
"SEQ_BLK.MONTREDC_SEQ.625:BL","[]"
"MULT_BLK.REG_Z.1054:AL","[]"
"SEQ_BLK.START_MM.439:AS
Start = ~rgt & Pc;","[('RSA_tb.RSA.SEQ_BLK.START_MM.Start', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_MM.rgt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_MM.Pc', 0, 0)]"
"SEQ_BLK.LOOP_CON.856:AS
Cy_mr = q[10];","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.Cy_mr', 0, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.q[10:0]', 10, 10)]"
"SEQ_BLK.START_O.428:AL","[]"
"SEQ_BLK.LOOP_CON.890:IF","[]"
"SEQ_BLK.START_O.429:IF","[]"
"MULT_BLK.REG_Z.1058:NS
q <= 32'h00000000;","[('RSA_tb.RSA.MULT_BLK.REG_Z.q[31:0]', 31, 0)]"
"SEQ_BLK.LOOP_CON.Leaf_859:AL","[]"
"SEQ_BLK.MODEXP_SEQ.465:NS
pc <= pc;","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0)]"
"SEQ_BLK.ONE_SEQ.792:IF","[]"
"SEQ_BLK.223:CA","[]"
"SEQ_BLK.INVN_SEQ.Leaf_703:AL","[]"
"SEQ_BLK.MODEXP_SEQ.462:NS
pc <= pc;","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0)]"
"SEQ_BLK.MONTREDC_SEQ.644:IF","[]"
"SEQ_BLK.224:NS
state <= KEY_GET;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0)]"
"SEQ_BLK.MONTREDC_SEQ.622:NS
op <= a;","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.op', 0, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.a', 0, 0)]"
"MEM0.151:AS
MemW = (WEN == 0) & (CEN == 0);","[('RSA_tb.RSA.MEM0.MemW', 0, 0), ('RSA_tb.RSA.MEM0.WEN', 0, 0), ('RSA_tb.RSA.MEM0.CEN', 0, 0)]"
"SEQ_BLK.322:NS
state <= IDLE;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0)]"
"SEQ_BLK.START_O.431:IF","[]"
"126:AS
r_data_m = mux2_1_32(r_data0, r_data1, MemSel);","[('RSA_tb.RSA.r_data_m[31:0]', 31, 0), ('RSA_tb.RSA.r_data0[31:0]', 31, 0), ('RSA_tb.RSA.r_data1[31:0]', 31, 0), ('RSA_tb.RSA.MemSel', 0, 0)]"
"SEQ_BLK.MONTMULT_SEQ.529:NS
pc <= { pc[26:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0), ('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 26, 0)]"
"MULT_BLK.REG_Y.1057:IF","[]"
"SEQ_BLK.MONTMULT_SEQ.537:IF","[]"
"MULT_BLK.REG_C.1057:IF","[]"
"MULT_BLK.REG_Z.1055:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.618:NS
op <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.op', 0, 0)]"
"SEQ_BLK.MONTREDC_SEQ.686:AS
Con = Contmp[30:0];","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.Con[30:0]', 30, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.Contmp[32:0]', 30, 0)]"
"69:NS
Krg <= 1024'h0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;","[('RSA_tb.RSA.Krg[1023:0]', 1023, 0)]"
"SEQ_BLK.LOOP_CON.871:NS
j <= 5'b00000;","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.j[4:0]', 4, 0)]"
"SEQ_BLK.LOOP_CON.859:BL","[]"
"SEQ_BLK.LOOP_CON.888:IF","[]"
"SEQ_BLK.365:IF","[]"
"SEQ_BLK.306:IF","[]"
"SEQ_BLK.LOOP_CON.887:AL","[]"
"SEQ_BLK.291:IF","[]"
"SEQ_BLK.355:IF","[]"
"SEQ_BLK.MODEXP_SEQ.463:IF","[]"
"SEQ_BLK.START_MR.434:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_MR.rgt', 0, 0)]"
"SEQ_BLK.275:BL","[]"
"SEQ_BLK.START_MR.428:BL","[]"
"SEQ_BLK.MONTREDC_SEQ.653:IF","[]"
"MULT_BLK.REG_Y.1054:BL","[]"
"SEQ_BLK.MODEXP_SEQ.481:NS
pc <= { pc[10:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0), ('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 10, 0)]"
"SEQ_BLK.360:NS
exp <= key_bit;","[('RSA_tb.RSA.SEQ_BLK.exp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.key_bit', 0, 0)]"
"SEQ_BLK.369:IF","[]"
"SEQ_BLK.253:BL","[]"
"MULT_BLK.REG_X.1060:NS
q <= d;","[('RSA_tb.RSA.MULT_BLK.REG_X.q[31:0]', 31, 0), ('RSA_tb.RSA.MULT_BLK.REG_X.d[31:0]', 31, 0)]"
"MULT_BLK.REG_Z.1060:NS
q <= d;","[('RSA_tb.RSA.MULT_BLK.REG_Z.q[31:0]', 31, 0), ('RSA_tb.RSA.MULT_BLK.REG_Z.d[31:0]', 31, 0)]"
"SEQ_BLK.START_MM.433:IF","[]"
"SEQ_BLK.MODEXP_SEQ.468:NS
pc <= 12'b000010000000;","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0)]"
"SEQ_BLK.INVN_SEQ.705:NS
pc <= 7'b0000000;","[('RSA_tb.RSA.SEQ_BLK.INVN_SEQ.pc[6:0]', 6, 0)]"
"SEQ_BLK.MONTMULT_SEQ.538:NS
pc <= 28'b0010000000000000000000000000;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"SEQ_BLK.351:AS
MemSel = s | Pc[3];","[('RSA_tb.RSA.SEQ_BLK.MemSel', 0, 0), ('RSA_tb.RSA.SEQ_BLK.s', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Pc[11:0]', 3, 3)]"
"SEQ_BLK.MODEXP_SEQ.478:NS
pc <= { pc[10:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0), ('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 10, 0)]"
"MEM1.155:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.643:BL","[]"
"SEQ_BLK.MONTREDC_SEQ.659:NS
pc <= { pc[9:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 9, 0)]"
"SEQ_BLK.Cp_SEQ.753:NS
pc <= 4'b0010;","[('RSA_tb.RSA.SEQ_BLK.Cp_SEQ.pc[3:0]', 3, 0)]"
"SEQ_BLK.290:CA","[]"
"SEQ_BLK.MODEXP_SEQ.472:NS
pc <= 12'b000100000000;","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0)]"
"SEQ_BLK.LOOP_CON.861:NS
i <= 10'b0000000000;","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.i[9:0]', 9, 0)]"
"SEQ_BLK.388:AS
Pc_MM = Pc[5] | Pc[6] | Pc[10];","[('RSA_tb.RSA.SEQ_BLK.Pc_MM', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Pc[11:0]', 5, 5), ('RSA_tb.RSA.SEQ_BLK.Pc[11:0]', 6, 6), ('RSA_tb.RSA.SEQ_BLK.Pc[11:0]', 10, 10)]"
"SEQ_BLK.LOOP_CON.872:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.634:NS
pc <= 11'b00000010000;","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0)]"
"SEQ_BLK.276:BL
Dvldrg <= 1'b0;
count <= count + 1;","[('RSA_tb.RSA.SEQ_BLK.Dvldrg', 0, 0), ('RSA_tb.RSA.SEQ_BLK.count[4:0]', 4, 0)]"
"SEQ_BLK.MONTMULT_SEQ.539:IF","[]"
"SEQ_BLK.MONTMULT_SEQ.533:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.639:NS
pc <= { pc[9:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 9, 0)]"
"MULT_BLK.REG_X.1058:NS
q <= 32'h00000000;","[('RSA_tb.RSA.MULT_BLK.REG_X.q[31:0]', 31, 0)]"
"68:IF","[]"
"123:AS
MemCon_o = { 2'b01, 2'b00, count };","[('RSA_tb.RSA.MemCon_o[8:0]', 8, 0), ('RSA_tb.RSA.count[4:0]', 4, 0)]"
"SEQ_BLK.MONTREDC_SEQ.632:NS
pc <= { pc[9:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 9, 0)]"
"SEQ_BLK.LOOP_CON.879:BL","[]"
"SEQ_BLK.MONTMULT_SEQ.540:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.Leaf_616:AL","[]"
"SEQ_BLK.MODEXP_SEQ.460:IF","[]"
"SEQ_BLK.MONTREDC_SEQ.636:NS
pc <= 11'b00000100000;","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0)]"
"SEQ_BLK.LOOP_CON.870:IF","[]"
"SEQ_BLK.Cp_SEQ.Leaf_746:AL","[]"
"SEQ_BLK.338:AS
Mvld = Mvldrg_tmp;","[('RSA_tb.RSA.SEQ_BLK.Mvld', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Mvldrg_tmp', 0, 0)]"
"MULT_BLK.REG_C.1056:NS
q <= 32'h00000000;","[('RSA_tb.RSA.MULT_BLK.REG_C.q[31:0]', 31, 0)]"
"SEQ_BLK.START_IN.439:AS
Start = ~rgt & Pc;","[('RSA_tb.RSA.SEQ_BLK.START_IN.Start', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_IN.rgt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_IN.Pc', 0, 0)]"
"SEQ_BLK.ONE_SEQ.811:AS
Hlt = pc[4];","[('RSA_tb.RSA.SEQ_BLK.ONE_SEQ.Hlt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.ONE_SEQ.pc[4:0]', 4, 4)]"
"SEQ_BLK.ONE_SEQ.786:BL","[]"
"124:AS
MemCon0 = mux3_1_9(MemCon_m, MemCon_s, MemCon_i, MemCon_o, { MemSel, InOutMem });","[('RSA_tb.RSA.MemCon0[8:0]', 8, 0), ('RSA_tb.RSA.MemCon_m[8:0]', 8, 0), ('RSA_tb.RSA.MemCon_s[8:0]', 8, 0), ('RSA_tb.RSA.MemCon_i[8:0]', 8, 0), ('RSA_tb.RSA.MemCon_o[8:0]', 8, 0), ('RSA_tb.RSA.MemSel', 0, 0), ('RSA_tb.RSA.InOutMem[1:0]', 1, 0)]"
"SEQ_BLK.INVN_SEQ.704:IF","[]"
"SEQ_BLK.265:BL
state <= DATA_OUT;
Dvldrg <= 1'b1;
InOutMem <= 2'b01;
count <= 5'b00000;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0), ('RSA_tb.RSA.SEQ_BLK.Dvldrg', 0, 0), ('RSA_tb.RSA.SEQ_BLK.InOutMem[1:0]', 1, 0), ('RSA_tb.RSA.SEQ_BLK.count[4:0]', 4, 0)]"
"SEQ_BLK.LOOP_CON.862:IF","[]"
"SEQ_BLK.MONTMULT_SEQ.Leaf_503:AL","[]"
"SEQ_BLK.272:NS
Start <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.Start', 0, 0)]"
"SEQ_BLK.LOOP_CON.854:AS
Cy_r = q[5];","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.Cy_r', 0, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.q[10:0]', 5, 5)]"
"SEQ_BLK.LOOP_CON.873:NS
j <= 5'b00000;","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.j[4:0]', 4, 0)]"
"SEQ_BLK.LOOP_CON.882:IF","[]"
"SEQ_BLK.START_MR.436:NS
rgt <= rgt | Pc;","[('RSA_tb.RSA.SEQ_BLK.START_MR.rgt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_MR.Pc', 0, 0)]"
"SEQ_BLK.346:NS
s <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.s', 0, 0)]"
"SEQ_BLK.MODEXP_SEQ.475:NS
pc <= 12'b000100000000;","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0)]"
"SEQ_BLK.209:IF","[]"
"SEQ_BLK.254:BL
state <= ENCRYPT;
InOutMem <= 2'b00;
count <= 5'b00000;
Start <= 1'b1;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0), ('RSA_tb.RSA.SEQ_BLK.InOutMem[1:0]', 1, 0), ('RSA_tb.RSA.SEQ_BLK.count[4:0]', 4, 0), ('RSA_tb.RSA.SEQ_BLK.Start', 0, 0)]"
"SEQ_BLK.414:AS
Hlt = Pc[11];","[('RSA_tb.RSA.SEQ_BLK.Hlt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Pc[11:0]', 11, 11)]"
"SEQ_BLK.MONTMULT_SEQ.520:IF","[]"
"SEQ_BLK.START_C.436:NS
rgt <= rgt | Pc;","[('RSA_tb.RSA.SEQ_BLK.START_C.rgt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_C.Pc', 0, 0)]"
"SEQ_BLK.LOOP_CON.893:NS
i_me <= q;","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.i_me[9:0]', 9, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.q[10:0]', 10, 0)]"
"SEQ_BLK.224:IF","[]"
"SEQ_BLK.253:CA","[]"
"SEQ_BLK.MONTREDC_SEQ.654:NS
pc <= { pc[9:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 9, 0)]"
"SEQ_BLK.208:BL","[]"
"SEQ_BLK.298:BL
state <= MOD_GET;
InOutMem <= 2'b10;
Dvldrg <= 1'b0;
Kvldrg_tmp <= 1'b0;
Mvldrg_tmp <= 1'b0;
Rst <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0), ('RSA_tb.RSA.SEQ_BLK.InOutMem[1:0]', 1, 0), ('RSA_tb.RSA.SEQ_BLK.Dvldrg', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Kvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Mvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Rst', 0, 0)]"
"SEQ_BLK.START_O.433:IF","[]"
"SEQ_BLK.LOOP_CON.855:AS
Cy_m = q[5];","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.Cy_m', 0, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.q[10:0]', 5, 5)]"
"SEQ_BLK.INVN_SEQ.703:AL","[]"
"SEQ_BLK.Leaf_208:AL","[]"
"SEQ_BLK.Cp_SEQ.751:IF","[]"
"127:AS
r_data_s = mux2_1_32(r_data1, r_data0, MemSel);","[('RSA_tb.RSA.r_data_s[31:0]', 31, 0), ('RSA_tb.RSA.r_data1[31:0]', 31, 0), ('RSA_tb.RSA.r_data0[31:0]', 31, 0), ('RSA_tb.RSA.MemSel', 0, 0)]"
"SEQ_BLK.364:BL","[]"
"SEQ_BLK.LOOP_CON.Leaf_869:AL","[]"
"SEQ_BLK.238:NS
count <= count + 1;","[('RSA_tb.RSA.SEQ_BLK.count[4:0]', 4, 0)]"
"SEQ_BLK.MODEXP_SEQ.471:IF","[]"
"SEQ_BLK.241:CA","[]"
"114:AS
d_in = (state == MOD_GET)? Min : Din;","[('RSA_tb.RSA.d_in[31:0]', 31, 0), ('RSA_tb.RSA.state[2:0]', 2, 0), ('RSA_tb.RSA.Min[31:0]', 31, 0), ('RSA_tb.RSA.Din[31:0]', 31, 0)]"
"SEQ_BLK.START_C.428:AL","[]"
"SEQ_BLK.START_MR.432:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_MR.rgt', 0, 0)]"
"SEQ_BLK.314:BL
Dvldrg <= 1'b0;
Kvldrg_tmp <= 1'b0;
Mvldrg_tmp <= 1'b0;
Rst <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.Dvldrg', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Kvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Mvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Rst', 0, 0)]"
"SEQ_BLK.364:AL","[]"
"SEQ_BLK.START_C.431:IF","[]"
"SEQ_BLK.344:NS
s <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.s', 0, 0)]"
"MULT_BLK.REG_X.1054:BL","[]"
"SEQ_BLK.MONTREDC_SEQ.641:NS
pc <= 10'b0000000100;","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0)]"
"SEQ_BLK.LOOP_CON.875:NS
j <= q[4:0];","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.j[4:0]', 4, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.q[10:0]', 4, 0)]"
"MULT_BLK.REG_Z.1057:IF","[]"
"SEQ_BLK.MONTMULT_SEQ.515:IF","[]"
"SEQ_BLK.367:IF","[]"
"SEQ_BLK.START_O.428:BL","[]"
"SEQ_BLK.Cp_SEQ.748:NS
pc <= 4'b0000;","[('RSA_tb.RSA.SEQ_BLK.Cp_SEQ.pc[3:0]', 3, 0)]"
"SEQ_BLK.MODEXP_SEQ.457:NS
pc <= 12'b000000000001;","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0)]"
"SEQ_BLK.276:IF","[]"
"SEQ_BLK.LOOP_CON.887:BL","[]"
"SEQ_BLK.330:NS
BSYrg <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.BSYrg', 0, 0)]"
"SEQ_BLK.412:AS
MemCon_s = { Con[13:12], ad_s };","[('RSA_tb.RSA.SEQ_BLK.MemCon_s[8:0]', 8, 0), ('RSA_tb.RSA.SEQ_BLK.Con[30:0]', 13, 12), ('RSA_tb.RSA.SEQ_BLK.ad_s[6:0]', 6, 0)]"
"SEQ_BLK.345:IF","[]"
"SEQ_BLK.354:AL","[]"
"SEQ_BLK.START_MM.428:AL","[]"
"SEQ_BLK.275:CA","[]"
"SEQ_BLK.354:BL","[]"
"SEQ_BLK.START_IN.434:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_IN.rgt', 0, 0)]"
"SEQ_BLK.LOOP_CON.879:AL","[]"
"SEQ_BLK.MONTMULT_SEQ.531:NS
pc <= 28'b0000000000010000000000000000;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"SEQ_BLK.MONTMULT_SEQ.532:IF","[]"
"MEM0.154:BL","[]"
"SEQ_BLK.MODEXP_SEQ.476:NS
pc <= pc;","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0)]"
"MEM0.159:NS
Q <= mem[A];","[('RSA_tb.RSA.MEM0.Q[31:0]', 31, 0), ('RSA_tb.RSA.MEM0.A[6:0]', 6, 0)]"
"SEQ_BLK.START_IN.430:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_IN.rgt', 0, 0)]"
"SEQ_BLK.Cp_SEQ.747:IF","[]"
"Leaf_67:AL","[]"
"SEQ_BLK.START_MR.439:AS
Start = ~rgt & Pc;","[('RSA_tb.RSA.SEQ_BLK.START_MR.Start', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_MR.rgt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_MR.Pc', 0, 0)]"
"SEQ_BLK.START_O.439:AS
Start = ~rgt & Pc;","[('RSA_tb.RSA.SEQ_BLK.START_O.Start', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_O.rgt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_O.Pc', 0, 0)]"
"SEQ_BLK.START_C.430:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_C.rgt', 0, 0)]"
"SEQ_BLK.MONTMULT_SEQ.509:NS
pc <= 28'b0000000000000000000000001000;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"SEQ_BLK.LOOP_CON.Leaf_879:AL","[]"
"MULT_BLK.REG_C.Leaf_1054:AL","[]"
"SEQ_BLK.INVN_SEQ.703:BL","[]"
"MULT_BLK.REG_Y.1055:IF","[]"
"MEM0.154:AL","[]"
"SEQ_BLK.MODEXP_SEQ.466:IF","[]"
"MEM1.154:BL","[]"
"SEQ_BLK.209:BL
state <= INIT;
Rst <= 1'b0;
Dvldrg <= 1'b0;
Kvldrg <= 1'b0;
Mvldrg <= 1'b0;
Kvldrg_tmp <= 1'b0;
Mvldrg_tmp <= 1'b0;
count <= 5'b00000;
InOutMem <= 2'b00;
Start <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0), ('RSA_tb.RSA.SEQ_BLK.Rst', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Dvldrg', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Kvldrg', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Mvldrg', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Kvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Mvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.count[4:0]', 4, 0), ('RSA_tb.RSA.SEQ_BLK.InOutMem[1:0]', 1, 0), ('RSA_tb.RSA.SEQ_BLK.Start', 0, 0)]"
"SEQ_BLK.332:NS
BSYrg <= 1'b1;","[('RSA_tb.RSA.SEQ_BLK.BSYrg', 0, 0)]"
"SEQ_BLK.MONTMULT_SEQ.505:NS
pc <= 28'b0000000000000000000000000000;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"SEQ_BLK.ONE_SEQ.791:IF","[]"
"SEQ_BLK.410:AS
MBCon = Con[30:16];","[('RSA_tb.RSA.SEQ_BLK.MBCon[30:16]', 30, 16), ('RSA_tb.RSA.SEQ_BLK.Con[30:0]', 30, 16)]"
"SEQ_BLK.START_MR.428:AL","[]"
"SEQ_BLK.358:NS
exp <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.exp', 0, 0)]"
"SEQ_BLK.MONTMULT_SEQ.516:IF","[]"
"MEM1.152:AS
MemR = (WEN == 1) & (CEN == 0);","[('RSA_tb.RSA.MEM1.MemR', 0, 0), ('RSA_tb.RSA.MEM1.WEN', 0, 0), ('RSA_tb.RSA.MEM1.CEN', 0, 0)]"
"SEQ_BLK.328:BL","[]"
"122:AS
MemCon_i = (state == MOD_GET)? { 2'b11, 2'b10, count } : { 2'b11, 2'b01, count };","[('RSA_tb.RSA.MemCon_i[8:0]', 8, 0), ('RSA_tb.RSA.state[2:0]', 2, 0), ('RSA_tb.RSA.count[4:0]', 4, 0)]"
"SEQ_BLK.298:IF","[]"
"SEQ_BLK.START_MR.431:IF","[]"
"SEQ_BLK.LOOP_CON.865:NS
i <= q;","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.i[9:0]', 9, 0), ('RSA_tb.RSA.SEQ_BLK.LOOP_CON.q[10:0]', 10, 0)]"
"SEQ_BLK.INVN_SEQ.708:IF","[]"
"SEQ_BLK.230:CA","[]"
"SEQ_BLK.MONTREDC_SEQ.616:BL","[]"
"76:AS
key_bit = Krg[1023];","[('RSA_tb.RSA.key_bit', 0, 0), ('RSA_tb.RSA.Krg[1023:0]', 1023, 1023)]"
"SEQ_BLK.LOOP_CON.863:NS
i <= 10'b0000000000;","[('RSA_tb.RSA.SEQ_BLK.LOOP_CON.i[9:0]', 9, 0)]"
"SEQ_BLK.START_IN.433:IF","[]"
"MULT_BLK.REG_X.1057:IF","[]"
"SEQ_BLK.347:IF","[]"
"SEQ_BLK.337:AS
Kvld = Kvldrg_tmp;","[('RSA_tb.RSA.SEQ_BLK.Kvld', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Kvldrg_tmp', 0, 0)]"
"SEQ_BLK.START_MR.429:IF","[]"
"SEQ_BLK.START_IN.432:NS
rgt <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.START_IN.rgt', 0, 0)]"
"SEQ_BLK.MONTREDC_SEQ.620:NS
op <= 1'b0;","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.op', 0, 0)]"
"SEQ_BLK.START_IN.431:IF","[]"
"MULT_BLK.REG_Y.1059:IF","[]"
"SEQ_BLK.411:AS
MemCon_m = { Con[15:14], ad_m };","[('RSA_tb.RSA.SEQ_BLK.MemCon_m[8:0]', 8, 0), ('RSA_tb.RSA.SEQ_BLK.Con[30:0]', 15, 14), ('RSA_tb.RSA.SEQ_BLK.ad_m[6:0]', 6, 0)]"
"SEQ_BLK.MONTMULT_SEQ.536:NS
pc <= 28'b0000000000000000000000000100;","[('RSA_tb.RSA.SEQ_BLK.MONTMULT_SEQ.pc[27:0]', 27, 0)]"
"SEQ_BLK.INVN_SEQ.707:NS
pc <= 7'b0000001;","[('RSA_tb.RSA.SEQ_BLK.INVN_SEQ.pc[6:0]', 6, 0)]"
"SEQ_BLK.MONTREDC_SEQ.613:AS
a = ~(op ^ sign);","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.a', 0, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.op', 0, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.sign', 0, 0)]"
"SEQ_BLK.MONTREDC_SEQ.646:NS
pc <= { pc[9:0], 1'b0 };","[('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 10, 0), ('RSA_tb.RSA.SEQ_BLK.MONTREDC_SEQ.pc[10:0]', 9, 0)]"
"SEQ_BLK.Cp_SEQ.746:BL","[]"
"MULT_BLK.REG_Y.1056:NS
q <= 32'h00000000;","[('RSA_tb.RSA.MULT_BLK.REG_Y.q[31:0]', 31, 0)]"
"SEQ_BLK.242:BL
state <= IDLE;
Mvldrg <= 1'b1;
Mvldrg_tmp <= 1'b1;
InOutMem <= 2'b00;
count <= 5'b00000;","[('RSA_tb.RSA.SEQ_BLK.state[2:0]', 2, 0), ('RSA_tb.RSA.SEQ_BLK.Mvldrg', 0, 0), ('RSA_tb.RSA.SEQ_BLK.Mvldrg_tmp', 0, 0), ('RSA_tb.RSA.SEQ_BLK.InOutMem[1:0]', 1, 0), ('RSA_tb.RSA.SEQ_BLK.count[4:0]', 4, 0)]"
"SEQ_BLK.START_MR.433:IF","[]"
"SEQ_BLK.261:NS
count <= count + 1;","[('RSA_tb.RSA.SEQ_BLK.count[4:0]', 4, 0)]"
"SEQ_BLK.221:IF","[]"
"SEQ_BLK.START_MM.436:NS
rgt <= rgt | Pc;","[('RSA_tb.RSA.SEQ_BLK.START_MM.rgt', 0, 0), ('RSA_tb.RSA.SEQ_BLK.START_MM.Pc', 0, 0)]"
"MULT_BLK.REG_X.Leaf_1054:AL","[]"
"MULT_BLK.REG_Y.1054:AL","[]"
"SEQ_BLK.START_MM.431:IF","[]"
"SEQ_BLK.221:BL","[]"
"SEQ_BLK.START_MR.Leaf_428:AL","[]"
"SEQ_BLK.START_IN.428:BL","[]"
"SEQ_BLK.MONTMULT_SEQ.510:IF","[]"
"SEQ_BLK.241:BL","[]"
"SEQ_BLK.Cp_SEQ.749:IF","[]"
"SEQ_BLK.MODEXP_SEQ.479:NS
pc <= 12'b000000010000;","[('RSA_tb.RSA.SEQ_BLK.MODEXP_SEQ.pc[11:0]', 11, 0)]"
